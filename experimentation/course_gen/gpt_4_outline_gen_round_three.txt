["This course is designed to cover the fundamental aspects of symmetric cryptography and cryptographic hash functions using Python. The goal is to enable you to create simpler encryption and hash algorithms from scratch. Given your background in Python programming, and fundamental knowledge of mathematics and statistics, the content has been ordered in a way to gradually introduce encryption concepts, and subsequently, hash functions. The course alternates between introducing theory and practical weeks to ensure that the theoretical knowledge is solidified via practical application.", 

"Week 1: Understanding Symmetric Cryptography: 
- Definition, purpose and application of Symmetric Cryptography
- Studying popular Symmetric Key Algorithms like Data Encryption Standard (DES) and Advanced Encryption Standard (AES)
- Understanding how encryption and decryption works in Symmetric Cryptography",

"Week 2: Implementing Symmetric Encryption Algorithms using Python: 
- Implementing a simple cipher like Caesar Cipher using python
- Introduction to Bit Manipulation in Python (required for DES and AES)
- Implementing basic DES and AES encryption and decryption algorithms from scratch",

"Week 3: Understanding Cryptographic Hash Functions: 
- Definition, purpose and application of Cryptographic Hash Functions
- Studying differences between Encryption and Hashing
- Introduction to popular Cryptographic Hash Functions like MD5 and SHA family",

"Week 4: Implementing Cryptographic Hash Functions using Python:
- Understanding the building blocks of Hash Functions like Modular Arithmetic and Bitwise operations
- Implementing a simple Hash Function
- Implementing MD5 Hash Function in Python",

"Week 5: Revision and Advanced topics: 
- Recap of Symmetric Cryptography and Cryptographic Hash Functions
- Understanding and mitigating weaknesses in Symmetric encryption and Hash Functions
- Discussing advanced topics in Cryptography or exploring different cryptographic libraries in Python based on student's interest."]
