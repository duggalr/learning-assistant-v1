{
    "q_prompt": "##Instructions:\nBelow, you will be given a converation of with a student, explaining what they want to learn, along with their background on that topic.\nYour goal will be to either generate a personalized course outline for the student.\n- The course outline should be split by a modular basis.\n- Each module will represent a specific topic that the student will learn.\n- Ensure each module does not cover too much information but at the same time, it doesn't cover too little information either.\n- Each module should contain sub-topics, to provide more clarity for the student on what will be covered.\n\nOutput Format: Your response must be outputted in JSON FORMAT, containing the following information:\n- \"student_background\"\n    - This value will be a summary containing what the student wants to learn, their goals and background.\n- \"name\"\n    - This value will be the name of the course. (leave value blank if unchanged or not required)\n- \"description\"\n    - This value will be the description of the course. (leave value blank if unchanged or not required)\n- \"modules\"\n    - This value will be populated based on the format described below, if the task on hand requires you to generate a course outline.\n        - This value will be a list of dictionaries (in JSON FORMAT), where each dictionary will contain:\n            - \"module_number\": this will be a number of the module which will be used to order the modules, when presenting to user\n                - 1 --> First Module, 2 --> Second Module, ...\n            - \"module_topic\": this will be the primary topic the module will cover\n            - \"module_description\": this will be a list, where each value in the list will be a string representing a sub-topic the module will cover\n    - Leave value blank if unchanged or not required\n\n##Conversation History with Student\nStudent Response: I want to learn python\nYour Response: That's great to hear that you want to learn Python! It's a powerful and versatile programming language. Do you have any specific goals or projects in mind that you would like to use Python for? Or are you looking to gain a general understanding of the language?\nStudent Response: general understanding and I want to learn to make a calculator app\nYour Response: Understanding that you're aiming for a general understanding of Python and also have an interest in creating a calculator app is a great starting point. I'll put together a learning plan that covers the fundamentals of Python, progresses through more advanced topics, and includes a practical project aspectâ€”building a calculator app. This will help you apply what you learn in a hands-on manner. Let's get started on this exciting journey with Python!\n\n##Your Answer:\n",
    "response": "{\n  \"student_background\": \"The student wants to gain a general understanding of Python and learn to make a calculator app.\",\n  \"name\": \"Introduction to Python and Building a Calculator App\",\n  \"description\": \"This course provides a comprehensive introduction to Python, covering fundamental to advanced topics, and culminates in a practical project where students build their own calculator app. It's designed for beginners who aspire to gain a deep understanding of Python and apply their knowledge in a real-world project.\",\n  \"modules\": [\n    {\n      \"module_number\": 1,\n      \"module_topic\": \"Getting Started with Python\",\n      \"module_description\": [\n        \"Introduction to Python: History and Features\",\n        \"Setting up the Python development environment\",\n        \"Basic syntax and execution of a Python program\",\n        \"Understanding Python scripts and the interactive mode\"\n      ]\n    },\n    {\n      \"module_number\": 2,\n      \"module_topic\": \"Python Basics\",\n      \"module_description\": [\n        \"Variables and data types\",\n        \"Basic operators and expressions\",\n        \"Input and output operations\",\n        \"Conditional statements (if, elif, else)\"\n      ]\n    },\n    {\n      \"module_number\": 3,\n      \"module_topic\": \"Control Structures and Functions\",\n      \"module_description\": [\n        \"Looping techniques (for loops, while loops)\",\n        \"Using built-in functions and creating custom functions\",\n        \"Function parameters and return values\",\n        \"Understanding the scope and lifetime of variables\"\n      ]\n    },\n    {\n      \"module_number\": 4,\n      \"module_topic\": \"Data Structures\",\n      \"module_description\": [\n        \"Lists and list operations\",\n        \"Tuples and their immutable nature\",\n        \"Dictionaries and accessing elements\",\n        \"Sets and set operations\"\n      ]\n    },\n    {\n      \"module_number\": 5,\n      \"module_topic\": \"Modules and Packages\",\n      \"module_description\": [\n        \"Introduction to modules and the import statement\",\n        \"Creating and using modules\",\n        \"Exploring standard modules\",\n        \"Understanding packages and their structure\"\n      ]\n    },\n    {\n      \"module_number\": 6,\n      \"module_topic\": \"Object-Oriented Programming\",\n      \"module_description\": [\n        \"Understanding classes and objects\",\n        \"Defining methods and attributes\",\n        \"Inheritance and polymorphism\",\n        \"Special methods (dunder methods)\"\n      ]\n    },\n    {\n      \"module_number\": 7,\n      \"module_topic\": \"Advanced Topics\",\n      \"module_description\": [\n        \"Error and exception handling\",\n        \"File input/output operations\",\n        \"Working with dates and time\",\n        \"Understanding comprehensions\"\n      ]\n    },\n    {\n      \"module_number\": 8,\n      \"module_topic\": \"Building a Calculator App\",\n      \"module_description\": [\n        \"Project overview and requirements\",\n        \"Designing the app interface\",\n        \"Implementing app functionality using Python\",\n        \"Testing and debugging the calculator app\"\n      ]\n    }\n  ]\n}"
}

// \"Setting up the Python development environment\" <-- exclude this from all course outline generations as already setup 
// let the user know they can ask questions about the outline that was generated, etc.
// once you reviewed the notes, i can generated some exrecsies (also have gen-exercise-btn on uI)

